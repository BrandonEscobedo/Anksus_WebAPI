@page "/Pregunta"
@layout ComponentsBase.ComponentBaseLogin
@inject IStateConteiner _StateContainer
@inject NavigationManager _NavigationManager
<p>@pregunta.pregunta</p>
@foreach (var preguntas in pregunta.Respuesta!)
{
    <button type="button"  @onclick="(e=> ValidarRespuesta(preguntas.IdRespuesta))" class="btn btn-success">respuesta: @preguntas.respuesta</button>
}
<p>@segundos</p>
<p>puntos:@puntos</p>
@code {
@using System.Timers
    public int puntos = 0;

    private PreguntasDTO pregunta = new();
    private Timer Timer = new Timer(1000);
    private int segundos = 10;
    [Parameter]
    public EventCallback OnSiguiente { get; set; }
    protected override async Task OnInitializedAsync()
    {
        pregunta = _StateContainer.pregunta;
        if (Timer.Enabled == false) Timer.Enabled = true;
        Timer.Elapsed += TimerEvent;
    }
    private void ValidarRespuesta(int idrespuesta)
    {
        if (pregunta!.Respuesta!.Where(x => x.RCorrecta == true).FirstOrDefault()!.IdRespuesta == idrespuesta)
        {
            puntos = segundos * 13;   
        }
    }
    private async void TimerEvent(object source, System.Timers.ElapsedEventArgs e)
    {
        segundos = segundos - 1;
        if (segundos == 0)
        {
            Timer.Enabled = false;
            Timer.Dispose();
            await OnSiguiente.InvokeAsync();                                   
        }

        StateHasChanged();
    }

}