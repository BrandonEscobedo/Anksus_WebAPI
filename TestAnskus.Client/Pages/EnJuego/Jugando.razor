@page "/CuestionarioActivo"
@implements IAsyncDisposable
@inject AuthenticationStateProvider _authenticationStateProvider
@inject NavigationManager NavigationM
@inject HttpClient _httpclient
@inject HubConnecionService HubService
<h3>Jugando</h3>
<p> @participantes Participantes</p>
@foreach()
@code {
    int participantes;
    private List<ParticipanteEnCuestDTO> participantesList = new List<ParticipanteEnCuestDTO>();

    protected override async Task OnInitializedAsync()
    {
        HubService.OnUpdateCount += OnUpdateUsersCount;
        HubService.participante += ParticipanteRecived;
        await HubService.IniciarConexion();        
    }
    private async void Add(ParticipanteEnCuestDTO participante)
    {
       await HubService.SendMessage(participante);
    }
    void OnUpdateUsersCount(int count)
    {
        participantes = count;
        StateHasChanged();
    }
    void ParticipanteRecived(ParticipanteEnCuestDTO participante)
    {
        participantesList.Add(participante);
        StateHasChanged();
    }
    public async ValueTask DisposeAsync()
    {
        HubService.OnUpdateCount -= OnUpdateUsersCount;
        HubService.participante -= ParticipanteRecived;
        await HubService.DisposeAsync();
    }

}
