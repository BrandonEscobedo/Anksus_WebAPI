@page "/login"
@using TestAnskus.Client.Pages.ComponentsBase
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@layout ComponentBaseLogin
    @if (ShowErrors)
    {
        <div class="alert alert-danger" role="alert">
            <p>@Error</p>
        </div>
    }
    <div class="d-flex align-items-center bg-secondary vh-100">
        <div class="container d-flex justify-content-center">
            <div class="card p-4 rounded" style="width: 30rem;">
                <h1 class="display-1 text-center text-primary pb-5"><a class="text-decoration-none" href="/">!¿Ansks Us?!</a></h1>
                <div class="container-fluid w-75">
                    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <h2 class="text-center pb-3">Bienvenido de vuelta</h2>
                        <div class="mb-3">
                            <label for="email">Correo Electronico</label>
                            <InputText Id="email" Class="form-control" @bind-Value="loginModel.Email" />
                            <ValidationMessage For="@(() => loginModel.Email)" />
                        </div>
                        <div class="mb-3">
                            <label for="password">Password</label>
                            <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>
                        <div class="d-flex justify-content-center pt-3">
                            <h6>¿No tienes cuenta? ¡registrate ahora!</h6>
                        </div>
                        <div class="d-flex justify-content-center">
                            <button type="submit" class="btn btn-primary me-2">Iniciar sesión</button>
                        <button class="btn btn-secondary ms-2"><a  href="/register" class ="text-decoration-none text-white">Regístrate</a> </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>

  

@code {

    private LoginModelA loginModel = new LoginModelA();
    private bool ShowErrors;
    private string Error = "";
    
    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error!;
            ShowErrors = true;
        }
    }

}